/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("/*********************************************************\r\n * index.js\r\n * Renders the chat widget in a Shadow DOM at #chat-widget-container\r\n *********************************************************/\r\n(function bootstrap() {\r\n  const POLL_INTERVAL = 200;\r\n  const MAX_WAIT = 60000;\r\n  let waited = 0;\r\n\r\n  function startIfReady() {\r\n    const container = document.getElementById('chat-widget-container');\r\n    if (container && container.getAttribute('data-user-id')) {\r\n      initializeChatWidget();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // Use MutationObserver for late-loaded containers (Safari safe)\r\n  const observer = new MutationObserver(() => {\r\n    if (startIfReady()) observer.disconnect();\r\n  });\r\n  observer.observe(document.body, { childList: true, subtree: true });\r\n\r\n  function tryStart() {\r\n    if (startIfReady()) return;\r\n    if (waited < MAX_WAIT) {\r\n      waited += POLL_INTERVAL;\r\n      setTimeout(tryStart, POLL_INTERVAL);\r\n    } else {\r\n      console.error(`Chat widget bootstrap: container not found after ${MAX_WAIT / 1000}s`);\r\n      observer.disconnect();\r\n    }\r\n  }\r\n\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', tryStart);\r\n  } else {\r\n    tryStart();\r\n  }\r\n})();\r\n\r\nasync function initializeChatWidget() {\r\n  /************  SEO / PERFORMANCE ADD-ON ① : pre-connect  ***********/\r\n  ['https://portal.ultimo-bots.com', 'https://cdn.jsdelivr.net']\r\n    .forEach(h => {\r\n      if (!document.querySelector(`link[rel=\"preconnect\"][href=\"${h}\"]`)) {\r\n        const l = document.createElement('link');\r\n        l.rel = 'preconnect'; l.href = h; l.crossOrigin = ''; document.head.appendChild(l);\r\n      }\r\n    });\r\n  /*******************************************************************/\r\n  let markedReady = typeof marked !== 'undefined';\r\n\r\n  async function ensureMarked() {\r\n    if (markedReady) return;\r\n\r\n    // 👇 tell Webpack to leave this dynamic import alone\r\n    const mod = await import(/* webpackIgnore: true */\r\n      'https://cdn.jsdelivr.net/npm/marked@11.1.1/lib/marked.esm.js');\r\n\r\n    mod.marked.setOptions({ gfm: true, breaks: true, headerIds: false });\r\n    globalThis.marked = mod.marked;\r\n    markedReady = true;\r\n  }\r\n\r\n  const container = document.getElementById('chat-widget-container');\r\n  if (!container) { console.error('Chat widget container not found'); return; }\r\n\r\n  if (container.parentElement !== document.body) document.body.appendChild(container);\r\n  // container.style.position = 'relative';\r\n  // container.style.all = 'initial';\r\n  // container.style.zIndex = '2147483647';\r\n  // container.style.all = 'initial';\r\n  // container.style.position = 'fixed';\r\n  // container.style.top = '0';\r\n  // container.style.left = '0';\r\n  // container.style.width = '0';\r\n  // container.style.height = '0';\r\n  // container.style.zIndex = '2147483647';\r\n  // container.style.pointerEvents = 'none';\r\n\r\n  Object.assign(container.style, {\r\n    position: 'fixed',\r\n    top: '0',\r\n    left: '0',\r\n    width: '0',\r\n    height: '0',\r\n    zIndex: '2147483647',\r\n    pointerEvents: 'none',\r\n  });\r\n\r\n  const botId = container.getAttribute('data-user-id');\r\n  if (!botId) { console.error('User ID not found (data-user-id is missing)'); return; }\r\n\r\n  const HIDE_POWERED_BY_IDS = [\r\n    '175312141824050790019FvXPU',\r\n    '176042572245566767005MVswy',\r\n    '176095906261776056032HDPJg',\r\n    '176011305821559093017GijUj',\r\n  ];\r\n\r\n  const POPUP_KEY = `saicf-popup-seen-${botId}`;\r\n  let   popUpSeen = sessionStorage.getItem(POPUP_KEY) === '1';\r\n\r\n  function markPopUpSeen() {\r\n    if (!popUpSeen) {\r\n      popUpSeen = true;\r\n      sessionStorage.setItem(POPUP_KEY, '1');\r\n    }\r\n  }\r\n\r\n  if (!container.isConnected) {\r\n    document.body.appendChild(container);\r\n  }\r\n  const shadowRoot = container.attachShadow({ mode: 'open' });\r\n\r\n  shadowRoot.host.setAttribute('lang', 'en');\r\n\r\n  if (!document.getElementById('saicf-global-scroll-style')) {\r\n    const globalScrollStyle = document.createElement('style');\r\n    globalScrollStyle.id = 'saicf-global-scroll-style';\r\n    globalScrollStyle.textContent = `\r\n      body.no-scroll,\r\n      html.no-scroll {\r\n        overflow: hidden !important;\r\n        position: fixed !important;\r\n        inset: 0 !important;\r\n        width: 100% !important;\r\n        touch-action: none !important;\r\n        overscroll-behavior: none !important;\r\n      }\r\n    `;\r\n    document.head.appendChild(globalScrollStyle);\r\n  }\r\n\r\n  const styleTag = document.createElement('style');\r\n  styleTag.textContent = `\r\n    /**********************************************************\r\n     * Embedded widget.css (now isolated to this Shadow DOM)\r\n     **********************************************************/\r\n\r\n    /* ───────── FULL ISOLATION: kill any inherited styles ───────── */\r\n    :host {\r\n      all: initial;\r\n      box-sizing: border-box;\r\n      font-family: \"DM Sans\", sans-serif;\r\n      z-index: 2147483647 !important;\r\n      position: fixed !important;   /* 👈 add this */\r\n      top: 0; left: 0; width: 0; height: 0;\r\n      pointer-events: none;\r\n    }\r\n\r\n    .saicf-chat-window,\r\n    .saicf-chat-widget-icon,\r\n    .saicf-pop-up-container { pointer-events: auto; }\r\n\r\n    /* keep border‑box for everything inside */\r\n    :host *, :host *::before, :host *::after {\r\n      box-sizing: inherit;\r\n    }\r\n\r\n    :host, .saicf-chat-window, .saicf-chat-window * {\r\n      font-family: \"DM Sans\", sans-serif !important;\r\n    }\r\n\r\n    :host {\r\n      --widget-size: 80px; /* fallback – will be overwritten by JS */\r\n    }\r\n\r\n    .saicf-chat-window p {\r\n      line-height: 1.3 !important;\r\n      font-size: 15px !important;\r\n    }\r\n    .saicf-chat-widget-icon {\r\n      position: fixed;\r\n      bottom: 20px;\r\n      right: 20px;\r\n      color: white;\r\n      border-radius: 50%;\r\n      width: 100px;\r\n      height: 100px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      cursor: pointer;\r\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n      font-size: 36px;\r\n      z-index: 999998 !important;\r\n    }\r\n    @keyframes pulse {\r\n      0% { transform: scale(1); }\r\n      50% { transform: scale(1.1); }\r\n      100% { transform: scale(1); }\r\n    }\r\n    .pulsing {\r\n      animation: pulse 2s infinite;\r\n    }\r\n    .saicf-chat-title {\r\n      font-size: 15px;\r\n      font-weight: 600;\r\n    }\r\n    .saicf-chat-window {\r\n      position: fixed;\r\n      bottom: 12px;\r\n      right: 12px;\r\n      width: 430px;\r\n      height: 620px;\r\n      background-color: transparent;\r\n      border: none;\r\n      border-radius: 16px;\r\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n      display: flex !important;\r\n      flex-direction: column;\r\n      z-index: 2147483647 !important;\r\n      opacity: 0;\r\n      transform: translateY(100%);\r\n      transition: opacity 0.5s ease, transform 0.5s ease;\r\n    }\r\n    .saicf-chat-window.show {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n    .hidden {\r\n      display: none;\r\n    }\r\n    .saicf-chat-header {\r\n      color: white;\r\n      padding: 10px 15px;\r\n      border-radius: 16px 16px 0px 0px;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    .saicf-chat-header-title {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n    .saicf-logo-message-container {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n    .saicf-close-btn {\r\n      background: none;\r\n      border: none;\r\n      color: rgb(218, 43, 43);\r\n      margin: 0;\r\n      padding: 0;\r\n      outline: none;\r\n      cursor: pointer;\r\n    }\r\n    .saicf-close-chat-widget-icon {\r\n      cursor: pointer;\r\n      transition: opacity 0.4s ease, transform 0.4s ease;\r\n    }\r\n    .saicf-close-chat-widget-icon .fa-xmark,\r\n    .saicf-close-chat-widget-icon svg {\r\n      font-size: 1.6rem;   /* or whatever looks right */\r\n    }\r\n    .saicf-close-chat-widget-icon:hover {\r\n      transform: scale(1.2);\r\n    }\r\n    .saicf-chat-body {\r\n      flex: 1;\r\n      padding: 8px;\r\n      padding-top: 0;\r\n      overflow-y: auto;\r\n      display: flex;\r\n      flex-direction: column;\r\n      background-color: white;\r\n    }\r\n    .saicf-chat-footer {\r\n      display: flex;\r\n      flex-direction: column;\r\n      // padding: 10px;\r\n      background-color: white;\r\n      gap: 8px;\r\n    }\r\n    .saicf-powered-by {\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n    .saicf-powered-by-text {\r\n      font-size: 10px;\r\n      color: rgb(146, 146, 146);\r\n      cursor: pointer;\r\n      text-decoration: underline;\r\n    }\r\n    .saicf-input-send-container {\r\n      display: flex;\r\n      border-top: 1px solid #f1f1f1;\r\n      padding: 10px;\r\n      background-color: #fafafa;\r\n    }\r\n    .saicf-chat-footer input {\r\n      flex: 1 !important;\r\n      padding: 7px !important;\r\n      border: 1px solid #ccc !important;\r\n      border-radius: 8px !important;\r\n      outline: none !important;\r\n      font-size: 16px !important;\r\n    }\r\n    .saicf-chat-footer button {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 6px;\r\n      padding-left: 15px;\r\n      padding-right: 15px;\r\n      color: white;\r\n      border: none;\r\n      border-radius: 10px;\r\n      cursor: pointer;\r\n      transition: background-color 0.4s ease, transform 0.2s ease;\r\n    }\r\n    .saicf-chat-footer button:hover {\r\n      background-color: #0595d3;\r\n      transform: translateY(-1.5px);\r\n    }\r\n    .saicf-widget-message {\r\n      max-width: 80%;\r\n      margin: 5px 0;\r\n      padding: 5px;\r\n      border-radius: 10px;\r\n      display: inline-block;\r\n    }\r\n    .widget-user-message {\r\n      align-self: flex-end !important;\r\n      color: white !important;\r\n      border-radius: 8px !important;\r\n      padding: 8px !important;\r\n      font-size: 15px !important;\r\n    }\r\n    .widget-bot-message {\r\n      align-self: flex-start !important;\r\n      background-color: #ffffff !important;\r\n      color: rgb(43, 43, 43) !important;\r\n      border-radius: 8px;\r\n      font-size: 15px !important;\r\n    }\r\n    .widget-bot-message strong {\r\n      color: rgb(57, 57, 57);\r\n    }\r\n    .widget-bot-message ul li:not(:last-child) {\r\n      margin-bottom: 6px;\r\n    }\r\n    .widget-user-message > :first-child,\r\n    .widget-bot-message > :first-child {\r\n      margin-top: 0;\r\n    }\r\n    .widget-user-message > :last-child,\r\n    .widget-bot-message > :last-child {\r\n      margin-bottom: 0;\r\n    }\r\n    .saicf-widget-send-icon {\r\n      font-size: 18px;\r\n      font-style: normal;\r\n    }\r\n    .saicf-loading-dots {\r\n      display: flex;\r\n      justify-content: left;\r\n      align-items: center;\r\n      height: 40px;\r\n      margin-top: 10px;\r\n      margin-bottom: 5px;\r\n    }\r\n    .saicf-loading-dots div {\r\n      width: 8px;\r\n      height: 8px;\r\n      margin: 0 4px;\r\n      border-radius: 50%;\r\n      animation: loading 0.6s infinite alternate;\r\n    }\r\n    @keyframes loading {\r\n      to {\r\n        opacity: 0.3;\r\n        transform: translateY(-8px);\r\n      }\r\n    }\r\n    .saicf-loading-dots div:nth-child(2) {\r\n      animation-delay: 0.2s;\r\n    }\r\n    .saicf-loading-dots div:nth-child(3) {\r\n      animation-delay: 0.4s;\r\n    }\r\n    .saicf-chat-widget-icon.align-left {\r\n      left: 25px !important;\r\n      right: auto !important;\r\n    }\r\n    .saicf-chat-widget-icon.elevated {\r\n      bottom: 70px !important;\r\n    }\r\n    .saicf-chat-window.align-left {\r\n      left: 20px !important;\r\n      right: auto !important;\r\n    }\r\n    .saicf-chat-window.elevated {\r\n      bottom: 12px !important;\r\n    }\r\n    .saicf-widget-message table {\r\n      border-collapse: separate;\r\n      border-spacing: 0px;\r\n      margin-top: 15px;\r\n      margin-bottom: 15px;\r\n      width: 100%;\r\n      overflow: auto;\r\n    }\r\n    .saicf-widget-message th, .saicf-widget-message td {\r\n      border: 1px solid rgba(0, 0, 0, 0.08);\r\n      padding: .35rem .50rem;\r\n      text-align: left;\r\n      font-size: 14px;\r\n    }\r\n    .saicf-widget-message th {\r\n      color: #000000;\r\n      background-color: rgba(0, 0, 0, 0.06);\r\n      border-right: 0;\r\n      padding: .5rem .50rem;\r\n      border-bottom: none;\r\n    }\r\n    .saicf-widget-message th:last-child {\r\n      border-right: 1px solid rgba(0, 0, 0, 0.08);\r\n    }\r\n    .saicf-widget-message td {\r\n      border-bottom: 0px solid rgba(0, 0, 0, 0.08);\r\n      border-right: 0px solid rgba(0, 0, 0, 0.08);\r\n    }\r\n    .saicf-widget-message td:last-child {\r\n      border-right: 1px solid rgba(0, 0, 0, 0.08);\r\n    }\r\n    .saicf-widget-message tr:first-child th:first-child {\r\n      border-top-left-radius: 8px;\r\n    }\r\n    .saicf-widget-message tr:first-child th:last-child {\r\n      border-top-right-radius: 8px;\r\n    }\r\n    .saicf-widget-message tr:last-child td:first-child {\r\n      border-bottom-left-radius: 8px;\r\n    }\r\n    .saicf-widget-message tr:last-child td:last-child {\r\n      border-bottom-right-radius: 8px;\r\n    }\r\n    .saicf-widget-message tr:last-child td {\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.08);\r\n    }\r\n\r\n    /**********************************************************\r\n     * Pop-up message styles\r\n     **********************************************************/\r\n    .saicf-pop-up-container {\r\n      position: fixed;\r\n      right: 20px;\r\n      bottom: calc(30px + var(--widget-size));\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 8px;\r\n      z-index: 999999;\r\n    }\r\n    .saicf-pop-up-container.hidden {\r\n      pointer-events: none;\r\n    }\r\n    .saicf-pop-up-container.align-left {\r\n      left: 25px !important;\r\n      right: auto !important;\r\n    }\r\n\r\n    .saicf-pop-up-container.elevated {\r\n      bottom: calc(80px + var(--widget-size));   /* 55 px (icon) + 10 px gap */\r\n    }\r\n\r\n    .saicf-pop-up-message {\r\n      background:rgb(250, 250, 250);\r\n      padding: 8px 12px;\r\n      border-radius: 12px;\r\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\r\n      font-size: 16px;\r\n      color: #000000;\r\n      max-width: 320px;\r\n      line-height: 1.3;\r\n      border: 1px solid rgb(232, 232, 232);\r\n      cursor: pointer;\r\n    }\r\n    .saicf-pop-up-close{\r\n      background:none;\r\n      border:none;\r\n      outline:none;\r\n      font-weight:500;\r\n      color:rgb(163,163,163);\r\n      align-self:flex-end;\r\n      cursor:pointer;\r\n      margin-bottom:0;\r\n      transition: opacity 0.3s ease, transform 0.3s ease;\r\n    }\r\n\r\n    .saicf-pop-up-close:hover{\r\n      transform: scale(1.05);\r\n    }\r\n\r\n    .saicf-pop-up-close{\r\n      opacity:0;\r\n      pointer-events:none;\r\n    }\r\n    .saicf-pop-up-close.show{\r\n      opacity:1;\r\n      pointer-events:auto;\r\n    }\r\n\r\n    .saicf-pop-up-message{\r\n      opacity:0;\r\n      transform:translateY(6px);\r\n      transition:opacity .4s ease, transform .4s ease;\r\n    }\r\n    .saicf-pop-up-message.show{\r\n      opacity:1;\r\n      transform:translateY(0);\r\n    }\r\n\r\n    /* ───────── predefined-question chips ───────── */\r\n    .saicf-predefined-container{\r\n      display:flex;\r\n      flex-wrap:wrap-reverse;\r\n      justify-content: flex-end;\r\n      gap:8px;\r\n      padding:6px 10px;\r\n      padding-bottom: 0;\r\n      background: white;\r\n    }\r\n\r\n    .saicf-predefined-container::-webkit-scrollbar{display:none;}\r\n\r\n    .saicf-predefined-question{\r\n      flex:0 0 auto;\r\n      border: 1px solid #e8e8e8ff;\r\n      background: transparent;\r\n      color:#333;\r\n      border-radius:20px;\r\n      padding:6px 12px;\r\n      font-size:14px;\r\n      white-space:nowrap;\r\n      cursor:pointer;\r\n      transition:background-color .25s,transform .2s;\r\n    }\r\n    .saicf-predefined-question:hover{\r\n      background: #f1f1f1ff;\r\n      transform:translateY(-1px);\r\n    }\r\n\r\n    /* ——— busy/disabled visuals ——— */\r\n    .saicf-send-message[disabled] {\r\n      opacity: .5 !important;\r\n      cursor: not-allowed !important;\r\n    }\r\n    .saicf-chat-footer input:disabled {\r\n      background: #f5f5f5 !important;\r\n      cursor: not-allowed !important;\r\n    }\r\n    .saicf-predefined-question.is-disabled {\r\n      opacity: .5 !important;\r\n      pointer-events: none !important;\r\n    }\r\n\r\n    /* ───────── Header actions: close \"X\" + three-dots menu ───────── */\r\n    .saicf-header-actions {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 4px;\r\n      position: relative; /* anchor menu below */\r\n    }\r\n\r\n    .saicf-ellipsis-btn {\r\n      background: none;\r\n      border: none;\r\n      color: inherit;\r\n      padding: 4px;\r\n      margin: 0;\r\n      cursor: pointer;\r\n      border-radius: 6px;\r\n      transition: background-color .2s ease, transform .2s ease;\r\n      font-size: 20px;\r\n    }\r\n    .saicf-ellipsis-btn:hover { transform: scale(1.08); }\r\n    .saicf-ellipsis-btn svg { width: 1.2em; height: 1.2em; display: block; }\r\n\r\n    .saicf-menu {\r\n      position: absolute;\r\n      top: calc(100% + 8px);\r\n      right: 0;\r\n      min-width: 160px;\r\n      background: #fff;\r\n      color: #1f2937;\r\n      border: 1px solid rgba(0,0,0,.08);\r\n      box-shadow: 0 8px 24px rgba(0,0,0,.15);\r\n      border-radius: 10px;\r\n      padding: 6px;\r\n      z-index: 2147483647; /* above header */\r\n      opacity: 0;\r\n      pointer-events: none;\r\n      transform: translateY(-6px);\r\n      transition: opacity .15s ease, transform .15s ease;\r\n    }\r\n    .saicf-menu.is-open {\r\n      opacity: 1;\r\n      pointer-events: auto;\r\n      transform: translateY(0);\r\n    }\r\n\r\n    .saicf-menu-item {\r\n      width: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      padding: 8px 10px;\r\n      border: 0;\r\n      background: transparent;\r\n      font: inherit;\r\n      color: inherit;\r\n      border-radius: 8px;\r\n      cursor: pointer;\r\n      text-align: left;\r\n    }\r\n    .saicf-menu-item:hover { background: #f3f4f6; }\r\n\r\n    .saicf-menu-item svg { width: 1em; height: 1em; display: block; }\r\n\r\n    @media (min-width: 769px) {\r\n      .saicf-chat-window {\r\n        width: min(430px, calc(100svw - 24px));\r\n        height: min(620px, calc(100svh - 24px));\r\n        max-height: calc(100svh - 24px);\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      /* Hide the dim overlay; the window itself covers the screen */\r\n      .saicf-chat-overlay {\r\n        display: none !important;\r\n      }\r\n\r\n      /* Fullscreen chat window (slides up when .show is added) */\r\n      .saicf-chat-window {\r\n        position: fixed !important;\r\n        inset: 0 !important;\r\n        width: 100% !important;\r\n        height: 100% !important;\r\n        border-radius: 0 !important;\r\n        background: #ffffff !important;\r\n        opacity: 0 !important;\r\n        transform: translateY(100%) !important;\r\n        transition: opacity 0.75s ease, transform 0.75s ease !important;\r\n        display: flex !important;\r\n        flex-direction: column !important;\r\n      }\r\n\r\n      /* When opened */\r\n      .saicf-chat-window.show {\r\n        opacity: 1 !important;\r\n        transform: none !important;\r\n      }\r\n\r\n      /* Internal pieces tuned for fullscreen */\r\n      .saicf-chat-window .saicf-chat-header {\r\n        border-radius: 0 !important;\r\n      }\r\n\r\n      .saicf-chat-header {\r\n        padding: 15px 8px;\r\n      }\r\n      .saicf-chat-window .saicf-chat-body {\r\n        flex: 1 1 auto !important;\r\n        min-height: 0 !important;\r\n        overflow-y: auto !important;\r\n        -webkit-overflow-scrolling: touch !important;\r\n      }\r\n\r\n      /* Keep your existing mobile sizing for other bits */\r\n      .saicf-close-chat-widget-icon {\r\n        font-size: 22px;\r\n      }\r\n      .saicf-chat-title {\r\n        font-size: 16px;\r\n      }\r\n      .widget-user-message,\r\n      .widget-bot-message {\r\n        font-size: 17px;\r\n      }\r\n      .saicf-chat-widget-icon {\r\n        width: 70px;\r\n        height: 70px;\r\n      }\r\n      .saicf-pop-up-container {\r\n        right: 20px;\r\n        bottom: calc(30px + var(--widget-size));\r\n      }\r\n      .saicf-pop-up-container.align-left {\r\n        left: 20px !important;\r\n        right: auto !important;\r\n      }\r\n      .saicf-pop-up-message {\r\n        padding: 7px 10px;\r\n        font-size: 14px;\r\n      }\r\n    }\r\n  `;\r\n  shadowRoot.appendChild(styleTag);\r\n\r\n  const widgetRoot = document.createElement('div');\r\n  widgetRoot.id = 'widget-root';\r\n  shadowRoot.appendChild(widgetRoot);\r\n\r\n  if (typeof marked !== 'undefined') {\r\n    marked.setOptions({\r\n      gfm: true,\r\n      breaks: true,\r\n      headerIds: false,\r\n    });\r\n  }\r\n\r\n  let widgetConfig;\r\n  try {\r\n    const hostPageUrl = encodeURIComponent(window.location.href);\r\n\r\n    const res = await fetch(\r\n      `https://portal.ultimo-bots.com/api/widget_configuration/${botId}?host_url=${hostPageUrl}`,\r\n      { cache: 'no-store' }\r\n    );\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`HTTP ${res.status}`);\r\n    }\r\n    widgetConfig = await res.json();\r\n  } catch (err) {\r\n    console.error('Widget config load failed – widget aborted', err);\r\n\r\n    if (!HIDE_POWERED_BY_IDS.includes(botId)) {\r\n      const backlink = document.createElement('a');\r\n      backlink.href = 'https://www.ultimo-bots.com';\r\n      backlink.target = '_blank';\r\n      backlink.rel = 'noopener';\r\n      backlink.textContent =\r\n        'This website is powered by smart AI chatbots from Ultimo Bot s';\r\n\r\n      backlink.style.display = 'block';      // so it sits on its own line\r\n      backlink.style.textAlign = 'center';   // centered horizontally\r\n      backlink.style.fontSize = '8px';\r\n      backlink.style.opacity = '0.01';\r\n      backlink.style.textDecoration = 'none';\r\n      backlink.style.color = 'inherit';      // inherit page text color\r\n\r\n      document.body.appendChild(backlink);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if (!HIDE_POWERED_BY_IDS.includes(botId)) {\r\n    const backlink = document.createElement('a');\r\n    backlink.href = 'https://www.ultimo-bots.com';\r\n    backlink.target = '_blank';\r\n    backlink.rel = 'noopener';\r\n    backlink.textContent =\r\n      'This website is powered by smart AI chatbots from Ultimo Bots';\r\n\r\n    backlink.style.display = 'block';      // so it sits on its own line\r\n    backlink.style.textAlign = 'center';   // centered horizontally\r\n    backlink.style.fontSize = '8px';\r\n    backlink.style.opacity = '0.01';\r\n    backlink.style.textDecoration = 'none';\r\n    backlink.style.color = 'inherit';      // inherit page text color\r\n\r\n    document.body.appendChild(backlink);\r\n  }\r\n\r\n  const themeColor          = widgetConfig.theme_color             || '#0082ba';\r\n  const hoverColor          = widgetConfig.button_hover_color      || '#0595d3';\r\n  const headerFontColor     = widgetConfig.header_font_color       || '#ffffff';\r\n  const welcomeMessages     = widgetConfig.welcome_message\r\n            ? Array.isArray(widgetConfig.welcome_message)\r\n              ? widgetConfig.welcome_message\r\n              : [widgetConfig.welcome_message]\r\n            : [\"\"];\r\n  const widgetHeaderText    = widgetConfig.header_text             || 'Chat with us!';\r\n  const widgetBorderRadius  = widgetConfig.widget_border_radius    ?? 50;\r\n  const widgetSize          = widgetConfig.widget_size             ?? 75;\r\n  const logo                = widgetConfig.header_icon_path        || null;\r\n  const icon                = widgetConfig.widget_icon_path        || null;\r\n  const popUpDelaySeconds   = widgetConfig.pop_up_delay_seconds    ?? 2;\r\n  const popUpMessages       = widgetConfig.pop_up_messages         ?? false;\r\n  const inputPlaceholder    = widgetConfig.input_placeholder       || 'Type your message...';\r\n\r\n  let isPulsing = false;\r\n  if (typeof widgetConfig.pulsing === 'boolean') {\r\n    isPulsing = widgetConfig.pulsing;\r\n  } else if (typeof widgetConfig.pulsing === 'string') {\r\n    isPulsing = widgetConfig.pulsing.toLowerCase() === 'true';\r\n  }\r\n\r\n  const horizontalAlignment = widgetConfig.widget_horizontal_alignment || 'right';\r\n  const verticalAlignment   = widgetConfig.widget_vertical_alignment   || 'bottom';\r\n\r\n  const chatWidgetIcon = document.createElement('div');\r\n  chatWidgetIcon.className = 'saicf-chat-widget-icon';\r\n  if (isPulsing) {\r\n    chatWidgetIcon.classList.add('pulsing');\r\n  }\r\n  if (!icon) {\r\n    chatWidgetIcon.style.backgroundColor = themeColor;\r\n    chatWidgetIcon.style.paddingBottom = '1px';\r\n  }\r\n  if (widgetBorderRadius != null) {\r\n    chatWidgetIcon.style.borderRadius = `${widgetBorderRadius}%`;\r\n  }\r\n  if (widgetSize != null) {\r\n    chatWidgetIcon.style.height = `${widgetSize}px`;\r\n    chatWidgetIcon.style.width = `${widgetSize}px`;\r\n\r\n    container.style.setProperty('--widget-size', `${widgetSize}px`);\r\n  }\r\n  if (icon) {\r\n    chatWidgetIcon.innerHTML = `\r\n      <img\r\n        src=\"${icon}\"\r\n        alt=\"Widget Icon\"\r\n        style=\"max-width: 100%; max-height: 100%; border-radius: ${widgetBorderRadius}%;\">\r\n    `;\r\n  } else {\r\n    chatWidgetIcon.innerHTML = `\r\n<div style=\"display:flex; justify-content:center; align-items:center; background-color: transparent; padding-top: 3px\">\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"65%\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"size-6\">\r\n    <path fill-rule=\"evenodd\" d=\"M12 2.25c-2.429 0-4.817.178-7.152.521C2.87 3.061 1.5 4.795 1.5 6.741v6.018c0 1.946 1.37 3.68 3.348 3.97.877.129 1.761.234 2.652.316V21a.75.75 0 0 0 1.28.53l4.184-4.183a.39.39 0 0 1 .266-.112c2.006-.05 3.982-.22 5.922-.506 1.978-.29 3.348-2.023 3.348-3.97V6.741c0-1.947-1.37-3.68-3.348-3.97A49.145 49.145 0 0 0 12 2.25ZM8.25 8.625a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25Zm2.625 1.125a1.125 1.125 0 1 1 2.25 0 1.125 1.125 0 0 1-2.25 0Zm4.875-1.125a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25Z\" clip-rule=\"evenodd\" />\r\n  </svg>\r\n</div>\r\n`;\r\n  }\r\n  const chatOverlay = document.createElement('div');\r\n  chatOverlay.className = 'saicf-chat-overlay hidden';\r\n\r\n  const chatWindow = document.createElement('div');\r\n  chatWindow.className = 'saicf-chat-window hidden';\r\n\r\n  const logoHTML = logo\r\n    ? `<img src=\"${logo}\" alt=\"Chat Logo\"\r\n         style=\"height:30px;width:30px;border-radius:50%;object-fit:cover;\"/>`\r\n    : '';\r\n  const headerHTML = `\r\n    <div class=\"saicf-chat-header\" style=\"background-color:${themeColor};\">\r\n      <div class=\"saicf-chat-header-title\">\r\n        <div class=\"saicf-logo-message-container\">\r\n          ${logoHTML}\r\n          <span class=\"saicf-chat-title\" style=\"color:${headerFontColor};\">${widgetHeaderText}</span>\r\n        </div>\r\n\r\n        <div class=\"saicf-header-actions\" aria-label=\"Chat actions\">\r\n          <!-- three dots -->\r\n          <button class=\"saicf-ellipsis-btn\" aria-label=\"More actions\" title=\"More\">\r\n            <svg viewBox=\"0 0 448 512\" fill=\"${headerFontColor}\">\r\n              <path d=\"M120 256a56 56 0 1 1-112 0 56 56 0 1 1 112 0zm160 0a56 56 0 1 1-112 0 56 56 0 1 1 112 0zm160 0a56 56 0 1 1-112 0 56 56 0 1 1 112 0z\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <!-- close X (unchanged) -->\r\n          <button class=\"saicf-close-btn saicf-close-chat-widget-icon\" aria-label=\"Close chat\" style=\"color:${headerFontColor};\">\r\n            <svg viewBox=\"0 0 384 512\" style=\"height:1em;width:1em;fill:currentColor;\">\r\n              <path d=\"M310.6 361.4 233.3 284l77.3-77.3c12.5-12.5 12.5-32.8 0-45.3-12.5-12.5-32.8-12.5-45.3 0L188 238.7 110.7 161.4c-12.5-12.5-32.8-12.5-45.3 0-12.5 12.5-12.5 32.8 0 45.3l77.3 77.3-77.3 77.3c-12.5 12.5-12.5 32.8 0 45.3 12.5 12.5 32.8 12.5 45.3 0L188 327.3l77.3 77.3c12.5 12.5 32.8 12.5 45.3 0 12.5-12.5 12.5-32.8 0-45.3z\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <!-- dropdown menu -->\r\n          <div class=\"saicf-menu\" role=\"menu\" aria-hidden=\"true\">\r\n            <button class=\"saicf-menu-item saicf-menu-item--clear\" role=\"menuitem\">\r\n              <svg viewBox=\"0 0 448 512\" fill=\"currentColor\">\r\n                <path d=\"M135.2 17.7c2.9-10.7 12.7-17.7 23.8-17.7h129.9c11.1 0 20.9 7.1 23.8 17.7L328 32H432c8.8 0 16 7.2 16 16s-7.2 16-16 16H416 32 16C7.2 64 0 56.8 0 48S7.2 32 16 32H120l15.2-14.3zM64 96H384l-21.2 355.9c-1.5 25.1-22.3 44.1-47.4 44.1H132.6c-25.1 0-45.9-19-47.4-44.1L64 96z\"/>\r\n              </svg>\r\n              Clear chat\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n  // Conditionally include the powered-by HTML\r\n  const poweredByHTML = HIDE_POWERED_BY_IDS.includes(botId)\r\n    ? ''\r\n    : `\r\n        <div class=\"saicf-powered-by\">\r\n          <a class=\"saicf-powered-by-text\"\r\n            href=\"https://www.ultimo-bots.com\"\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n            title=\"Our website uses intelligent chatbots powered by Ultimo Bots to improve customer service.\">\r\n            Powered by Ultimo Bots\r\n          </a>\r\n        </div>\r\n      `;\r\n\r\n  chatWindow.innerHTML = `\r\n    ${headerHTML}\r\n    <div class=\"saicf-chat-body\"></div>\r\n    <div class=\"saicf-chat-footer\">\r\n      <div class=\"saicf-predefined-container hidden\"></div>\r\n      ${poweredByHTML}\r\n      <div class=\"saicf-input-send-container\">\r\n        <input type=\"text\" class=\"saicf-chat-input\" placeholder=\"${inputPlaceholder}\">\r\n        <button class=\"saicf-send-message\" style=\"background-color:${themeColor};\" aria-label=\"Send message\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" style=\"width: 16px; height: 16px; fill: ${headerFontColor};\">\r\n            <path d=\"M214.6 41.4c-12.5-12.5-32.8-12.5-45.3 0L7 203.6c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 140.3V464c0 17.7 14.3 32 32 32s32-14.3 32-32V140.3l107.6 108.7c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L214.6 41.4z\"/>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  const popUpContainer = document.createElement('div');\r\n\r\n  (function zoomWidgetForWixMobile () {\r\n    /* run only on narrow screens – skip desktop completely */\r\n    if (window.screen.width > 600) return;          // ← use screen.width here\r\n\r\n    const vp = document.querySelector('meta[name=\"viewport\"][id=\"wixMobileViewport\"]');\r\n    if (!vp) return;\r\n\r\n    const m = /width\\s*=\\s*(\\d+)/i.exec(vp.content || '');\r\n    if (!m) return;\r\n\r\n    const forcedWidth = +m[1];                      // 320\r\n\r\n    const physical    = window.screen.width;        // ← real CSS-px of device\r\n    if (physical <= forcedWidth) return;            // e.g. old iPhone SE\r\n\r\n    const zoomFactor  = forcedWidth / physical;     // ≈ 0.74 on 375-px devices\r\n\r\n    /* zoom rescales visuals *and* hit-testing */\r\n    container.style.zoom = zoomFactor;              // all major browsers\r\n    container.style.setProperty('-moz-transform', `scale(${zoomFactor})`);\r\n    container.style.setProperty('-moz-transform-origin', 'top left');\r\n  })();\r\n\r\n  popUpContainer.className = 'saicf-pop-up-container hidden';\r\n\r\n  const popUpCloseBtn = document.createElement('button');\r\n  popUpCloseBtn.className = 'saicf-pop-up-close';\r\n  popUpCloseBtn.innerHTML = `\r\n    <svg viewBox=\"0 0 384 512\" style=\"height:1.5em; width:1.5em; fill:currentColor; margin-bottom: 2px;\">\r\n      <path d=\"M310.6 361.4 233.3 284l77.3-77.3c12.5-12.5 12.5-32.8 0-45.3-12.5-12.5-32.8-12.5-45.3 0L188 238.7 110.7 161.4c-12.5-12.5-32.8-12.5-45.3 0-12.5 12.5-12.5 32.8 0 45.3l77.3 77.3-77.3 77.3c-12.5 12.5-12.5 32.8 0 45.3 12.5 12.5 32.8 12.5 45.3 0L188 327.3l77.3 77.3c12.5 12.5 32.8 12.5 45.3 0 12.5-12.5 12.5-32.8 0-45.3z\"/>\r\n    </svg>\r\n  `;\r\n  popUpCloseBtn.style.backgroundColor = themeColor;\r\n  popUpCloseBtn.style.color = headerFontColor;\r\n  popUpCloseBtn.style.borderRadius = '50%';\r\n  popUpCloseBtn.style.padding = '0px';\r\n  popUpCloseBtn.style.width = '24px';\r\n  popUpCloseBtn.style.height = '24px';\r\n  popUpCloseBtn.style.display = 'flex';\r\n  popUpCloseBtn.style.alignItems = 'center';\r\n  popUpCloseBtn.style.justifyContent = 'center';\r\n  popUpContainer.appendChild(popUpCloseBtn);\r\n\r\n  welcomeMessages.forEach(msg => {\r\n    const msgEl = document.createElement('div');\r\n    msgEl.className = 'saicf-pop-up-message';\r\n    msgEl.innerHTML = msg.replace(/\\n/g, '<br>');\r\n    popUpContainer.appendChild(msgEl);\r\n\r\n    // ✅ Click opens chat exactly like the widget icon\r\n    msgEl.addEventListener('click', () => {\r\n      ensureMarked().then(() => {\r\n        if (chatBody.childElementCount === 0) {\r\n          welcomeMessages.forEach(msg => appendMessage(msg, 'bot'));\r\n        }\r\n      });\r\n      chatWindow.classList.remove('hidden');\r\n      forceReflow(chatWindow);\r\n      chatWindow.classList.add('show');\r\n      chatOverlay.classList.remove('hidden');\r\n\r\n      if (window.matchMedia('(max-width: 768px)').matches) {\r\n        document.body.classList.add('no-scroll');\r\n      }\r\n\r\n      widgetOpenedOnce = true;\r\n      markPopUpSeen();\r\n      hidePopUp();\r\n    });\r\n  });\r\n\r\n  widgetRoot.appendChild(chatWidgetIcon);\r\n  widgetRoot.appendChild(chatOverlay);\r\n  widgetRoot.appendChild(chatWindow);\r\n  widgetRoot.appendChild(popUpContainer);\r\n\r\n  if (horizontalAlignment === 'left') {\r\n    chatWidgetIcon.classList.add('align-left');\r\n    chatWindow.classList.add('align-left');\r\n    popUpContainer.classList.add('align-left');\r\n  }\r\n  if (verticalAlignment === 'elevated') {\r\n    chatWidgetIcon.classList.add('elevated');\r\n    chatWindow.classList.add('elevated');\r\n    popUpContainer.classList.add('elevated');\r\n  }\r\n\r\n  const dynamicStyleEl = document.createElement('style');\r\n  dynamicStyleEl.textContent = `\r\n    .saicf-chat-footer button:hover {\r\n      background-color: ${hoverColor} !important;\r\n    }\r\n    .widget-user-message {\r\n      background-color: ${themeColor} !important;\r\n    }\r\n    .saicf-loading-dots div {\r\n      background-color: ${themeColor} !important;\r\n    }\r\n  `;\r\n  shadowRoot.appendChild(dynamicStyleEl);\r\n\r\n  const closeChatBtn   = chatWindow.querySelector('.saicf-close-btn');\r\n  const chatBody       = chatWindow.querySelector('.saicf-chat-body');\r\n  const chatInput      = chatWindow.querySelector('.saicf-chat-footer input');\r\n  const sendMessageBtn = chatWindow.querySelector('.saicf-send-message');\r\n\r\n  // ───────── three-dots menu wiring ─────────\r\n  const ellipsisBtn = chatWindow.querySelector('.saicf-ellipsis-btn');\r\n  const actionsWrap = chatWindow.querySelector('.saicf-header-actions');\r\n  const menu        = chatWindow.querySelector('.saicf-menu');\r\n  const clearBtn    = chatWindow.querySelector('.saicf-menu-item--clear');\r\n\r\n  // toggle menu open/close\r\n  function toggleMenu(open) {\r\n    const willOpen = typeof open === 'boolean' ? open : !menu.classList.contains('is-open');\r\n    menu.classList.toggle('is-open', willOpen);\r\n    menu.setAttribute('aria-hidden', String(!willOpen));\r\n  }\r\n\r\n  // close menu on outside click (inside shadow DOM)\r\n  shadowRoot.addEventListener('click', (e) => {\r\n    if (!menu.classList.contains('is-open')) return;\r\n    if (actionsWrap.contains(e.target)) return; // clicks on button/menu are fine\r\n    toggleMenu(false);\r\n  });\r\n\r\n  // also close on Escape\r\n  shadowRoot.addEventListener('keydown', (e) => {\r\n    if (e.key === 'Escape' && menu.classList.contains('is-open')) toggleMenu(false);\r\n  });\r\n\r\n  // open/close when tapping the dots\r\n  ellipsisBtn.addEventListener('click', (e) => {\r\n    e.stopPropagation();\r\n    toggleMenu();\r\n  });\r\n\r\n  // clear chat = new session + wipe messages (+ show welcome again)\r\n  clearBtn.addEventListener('click', (e) => {\r\n    e.preventDefault();\r\n    toggleMenu(false);\r\n\r\n    // new session id\r\n    sessionId = generateSessionId();\r\n\r\n    // clear UI messages\r\n    chatBody.innerHTML = '';\r\n\r\n    // optional: also remove any \"loading dots\" if present\r\n    const loadingDots = chatBody.querySelector('.saicf-loading-dots');\r\n    if (loadingDots) loadingDots.remove();\r\n\r\n    // re-show welcome messages (if configured)\r\n    if (Array.isArray(welcomeMessages) && welcomeMessages.length) {\r\n      welcomeMessages.forEach(msg => appendMessage(msg, 'bot'));\r\n    }\r\n\r\n    // focus input for convenience\r\n    chatInput.focus();\r\n  });\r\n\r\n  // make sure menu never lingers when the chat closes\r\n  const _origCloseChat = closeChat;\r\n  closeChat = function () {\r\n    toggleMenu(false);\r\n    _origCloseChat();\r\n  };\r\n\r\n  let isBusy = false; // ← blocks any new user input while bot is responding\r\n\r\n  function getPredefinedChips() {\r\n    return Array.from(chatWindow.querySelectorAll('.saicf-predefined-question'));\r\n  }\r\n\r\n  function setBusy(b) {\r\n    isBusy = b;\r\n\r\n    // Inputs\r\n    chatInput.disabled = b;\r\n    sendMessageBtn.disabled = b;\r\n    chatInput.setAttribute('aria-disabled', String(b));\r\n    sendMessageBtn.setAttribute('aria-disabled', String(b));\r\n\r\n    // Predefined question chips\r\n    getPredefinedChips().forEach(chip => {\r\n      chip.classList.toggle('is-disabled', b);\r\n      chip.tabIndex = b ? -1 : 0;\r\n      chip.setAttribute('aria-disabled', String(b));\r\n    });\r\n  }\r\n\r\n  /* ───────── predefined‑question chips ───────── */\r\n  const predefinedContainer = chatWindow.querySelector('.saicf-predefined-container');\r\n\r\n  let predefinedQuestions = widgetConfig.predefined_questions ?? [];\r\n  try {\r\n    if (typeof predefinedQuestions === 'string') {\r\n      predefinedQuestions = JSON.parse(predefinedQuestions);\r\n    }\r\n  } catch {}\r\n\r\n  const hasRealQuestions =\r\n    Array.isArray(predefinedQuestions) &&\r\n    (predefinedQuestions.length > 1 ||\r\n    (predefinedQuestions.length === 1 && predefinedQuestions[0].trim() !== ''));\r\n\r\n  if (hasRealQuestions) {\r\n    predefinedContainer.classList.remove('hidden');\r\n\r\n    predefinedQuestions.forEach(q => {\r\n      if (!q) return;\r\n      const chip        = document.createElement('div');\r\n      chip.className    = 'saicf-predefined-question';\r\n      chip.textContent  = q;\r\n\r\n      chip.addEventListener('click', () => {\r\n        if (isBusy) return;          // ignore while streaming\r\n        chatInput.value = q;\r\n        sendMessage();\r\n      });\r\n\r\n      predefinedContainer.appendChild(chip);\r\n    });\r\n  }\r\n\r\n  let sessionId = generateSessionId();\r\n  let widgetOpenedOnce = popUpSeen;\r\n\r\n  chatWidgetIcon.addEventListener('click', () => {\r\n    ensureMarked().then(() => {\r\n      if (chatBody.childElementCount === 0) {\r\n        welcomeMessages.forEach(msg => appendMessage(msg, 'bot'));\r\n      }\r\n    });\r\n    chatWindow.classList.remove('hidden');\r\n    forceReflow(chatWindow);\r\n    chatWindow.classList.add('show');\r\n    chatOverlay.classList.remove('hidden');\r\n    if (window.matchMedia('(max-width: 768px)').matches) {\r\n      document.body.classList.add('no-scroll');\r\n    }\r\n    widgetOpenedOnce = true;\r\n    markPopUpSeen();\r\n    hidePopUp();\r\n  });\r\n\r\n  closeChatBtn.addEventListener('click', () => {\r\n    closeChat();\r\n  });\r\n\r\n  sendMessageBtn.addEventListener('click', () => {\r\n    if (isBusy) return;\r\n    sendMessage();\r\n  });\r\n\r\n  chatInput.addEventListener('keypress', (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (isBusy) { e.preventDefault(); return; }\r\n      sendMessage();\r\n    }\r\n  });\r\n\r\n  popUpCloseBtn.addEventListener('click', e => {\r\n    e.stopPropagation();\r\n    hidePopUp();\r\n    widgetOpenedOnce = true;\r\n    markPopUpSeen();\r\n  });\r\n\r\n  function showPopUpSequentially() {\r\n    if (widgetOpenedOnce || popUpSeen) return;\r\n    popUpContainer.classList.remove('hidden');\r\n\r\n    const msgs = popUpContainer.querySelectorAll('.saicf-pop-up-message');\r\n    msgs.forEach((msg, i) => {\r\n      setTimeout(() => {\r\n        msg.classList.add('show');\r\n        if (i === 0) {\r\n          popUpCloseBtn.classList.add('show');\r\n        }\r\n      }, i * 1200);\r\n    });\r\n  }\r\n\r\n  function hidePopUp() {\r\n    popUpContainer.classList.add('hidden');\r\n    popUpContainer.querySelectorAll('.saicf-pop-up-message')\r\n                  .forEach(m => m.classList.remove('show'));\r\n    popUpCloseBtn.classList.remove('show');\r\n  }\r\n\r\n  if (popUpMessages) {\r\n    setTimeout(showPopUpSequentially, popUpDelaySeconds * 1000);\r\n  }\r\n\r\n  function forceReflow(element) {\r\n    void element.offsetHeight;\r\n  }\r\n\r\n  function closeChat() {\r\n    chatWindow.classList.remove('show');\r\n    chatOverlay.classList.add('hidden');\r\n    if (window.matchMedia('(max-width: 768px)').matches) {\r\n      document.body.classList.remove('no-scroll');\r\n    }\r\n    setTimeout(() => chatWindow.classList.add('hidden'), 300);\r\n  }\r\n\r\n  function generateSessionId() {\r\n    const timestamp = new Date().getTime();\r\n    const randomNum = Math.floor(Math.random() * 10000) + 1;\r\n    return `${timestamp}-${randomNum}`;\r\n  }\r\n\r\n  async function sendMessage() {\r\n    if (isBusy) return;                // ← guard against re-entry\r\n\r\n    const message = chatInput.value.trim();\r\n    if (!message) return;\r\n\r\n    // show the user’s message\r\n    appendMessage(message, 'user');\r\n    chatInput.value = '';\r\n\r\n    setBusy(true);\r\n    setLoading(true);\r\n\r\n    let currentBotMessage = '';\r\n\r\n    const url =\r\n      `https://portal.ultimo-bots.com/api/chatbot_response?` +\r\n      `user_input=${encodeURIComponent(message)}` +\r\n      `&session_id=${sessionId}&bot_id=${botId}&language=english`;\r\n\r\n    const finish = () => {\r\n      setLoading(false);\r\n      setBusy(false);                  // ← re-enable everything only now\r\n      scrollToBottom();\r\n    };\r\n\r\n    return new Promise((resolve) => {\r\n      const es = new EventSource(url);\r\n      let firstChunk = true;\r\n\r\n      es.onmessage = ({ data: chunk }) => {\r\n        if (chunk === 'end of response') return;\r\n        if (firstChunk) {\r\n          setLoading(false);\r\n          firstChunk = false;\r\n        }\r\n        currentBotMessage += chunk.replace(/<newline>/g, '\\n');\r\n        updateBotMessage(currentBotMessage);\r\n        scrollToBottom();\r\n      };\r\n\r\n      es.addEventListener('end', () => {\r\n        updateBotMessage(currentBotMessage);\r\n        es.close();\r\n        finish();\r\n        resolve();\r\n      });\r\n\r\n      es.addEventListener('error', (e) => {\r\n        if (e?.data === 'Timeout while generating response') {\r\n          es.close();\r\n          appendMessage(\r\n            'Sorry, the server took too long to respond. Please try again.',\r\n            'bot'\r\n          );\r\n          finish();\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function updateBotMessage(text) {\r\n    const lastMessage = chatBody.lastElementChild;\r\n    if (lastMessage && lastMessage.classList.contains('widget-bot-message')) {\r\n      if (typeof marked !== 'undefined') {\r\n        lastMessage.innerHTML = marked.parse(text);\r\n      } else {\r\n        lastMessage.textContent = text;\r\n      }\r\n    } else {\r\n      appendMessage(text, 'bot');\r\n    }\r\n  }\r\n\r\n  function appendMessage(text, sender) {\r\n    const messageElement = document.createElement('div');\r\n    messageElement.className = `saicf-widget-message widget-${sender}-message`;\r\n    if (typeof marked !== 'undefined') {\r\n      messageElement.innerHTML = marked.parse(text);\r\n    } else {\r\n      messageElement.textContent = text;\r\n    }\r\n    chatBody.appendChild(messageElement);\r\n    scrollToBottom();\r\n  }\r\n\r\n  function scrollToBottom() {\r\n    chatBody.scrollTop = chatBody.scrollHeight;\r\n  }\r\n\r\n  function setLoading(isLoading) {\r\n    if (isLoading) {\r\n      const loadingDots = document.createElement('div');\r\n      loadingDots.className = 'saicf-loading-dots';\r\n      loadingDots.innerHTML = '<div></div><div></div><div></div>';\r\n      chatBody.appendChild(loadingDots);\r\n      scrollToBottom();\r\n    } else {\r\n      const loadingDots = chatBody.querySelector('.saicf-loading-dots');\r\n      if (loadingDots) {\r\n        loadingDots.remove();\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://swiss_bot_widget/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;